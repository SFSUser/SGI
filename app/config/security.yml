security:
    #encoders: 
    #    Acme\SFSBundle\Entity\SFSUsers:
    #        algorithm: null
    #        encode_as_base64: false
    #    iterations: 1
    #
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        Acme\SFSBundle\Entity\SFSAccounts: plaintext

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        chain_provider:
            chain:
                providers: [in_memory, user_db]
        user_db:
            entity: { class: AcmeSFSBundle:SFSAccounts, property: user }

        in_memory:
            memory:
                users:
    #                user:  { password: '0000', roles: [ 'ROLE_USER' ] }
    #                admin: { password: '900477525*', roles: [ 'ROLE_ADMIN' ] }
                     sfs: { password: '0000', roles: [ 'ROLE_ADMIN' ] }
    #                comercial: { password: '900477525*', roles: [ 'ROLE_USER' ] }
    #                certificados: { password: '900477525*', roles: [ 'ROLE_MANAGER' ] }

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/demo/secured/login$
            security: false

        secured_area:
            pattern:    ^/
            form_login:
                check_path: /admin/check
                login_path: /admin/login
            logout:
                path:   adminlogout
                target: adminlogin
            anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    access_control:
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        #- { path: ^/contacto, roles: ROLE_ADMIN }
        - { path: ^/secured/, roles: [ROLE_ADMIN,ROLE_USER] }
        - { path: ^/manager/, roles: [ROLE_ADMIN,ROLE_MANAGER] }
